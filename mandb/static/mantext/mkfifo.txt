MKFIFO(2)		    BSD System Calls Manual		     MKFIFO(2)

NAME
     mkfifo -- make a fifo file

SYNOPSIS
     #include <sys/types.h>
     #include <sys/stat.h>

     int
     mkfifo(const char *path, mode_t mode);

DESCRIPTION
     Mkfifo() creates a new fifo file with name path.  The access permissions
     are specified by mode and restricted by the umask(2) of the calling
     process.

     The fifo's owner ID is set to the process's effective user ID.  The
     fifo's group ID is set to that of the parent directory in which it is
     created.

RETURN VALUES
     A 0 return value indicates success.  A -1 return value indicates an
     error, and an error code is stored in errno.

ERRORS
     Mkfifo() will fail and no fifo will be created if:

     [ENOTSUP]		The kernel has not been configured to support fifo's.

     [ENOTDIR]		A component of the path prefix is not a directory.

     [ENAMETOOLONG]	A component of a pathname exceeded {NAME_MAX} charac-
			ters, or an entire path name exceeded {PATH_MAX} char-
			acters.

     [ENOENT]		A component of the path prefix does not exist.

     [EACCES]		Search permission is denied for a component of the
			path prefix.

     [ELOOP]		Too many symbolic links were encountered in translat-
			ing the pathname.

     [EROFS]		The named file resides on a read-only file system.

     [EEXIST]		The named file exists.

     [ENOSPC]		The directory in which the entry for the new fifo is
			being placed cannot be extended because there is no
			space left on the file system containing the direc-
			tory.

     [ENOSPC]		There are no free inodes on the file system on which
			the fifo is being created.

     [EDQUOT]		The directory in which the entry for the new fifo is
			being placed cannot be extended because the user's
			quota of disk blocks on the file system containing the
			directory has been exhausted.

     [EDQUOT]		The user's quota of inodes on the file system on which
			the fifo is being created has been exhausted.

     [EIO]		An I/O error occurred while making the directory entry
			or allocating the inode.

     [EIO]		An I/O error occurred while reading from or writing to
			the file system.

     [EFAULT]		Path points outside the process's allocated address
			space.

SEE ALSO
     chmod(2), stat(2), umask(2)

STANDARDS
     The mkfifo function call conforms to IEEE Std 1003.1-1988 (``POSIX.1'').

BSD				 June 4, 1993				   BSD
