GETITIMER(2)		    BSD System Calls Manual		  GETITIMER(2)

NAME
     getitimer, setitimer -- get/set value of interval timer

SYNOPSIS
     #include <sys/time.h>

     #define ITIMER_REAL      0
     #define ITIMER_VIRTUAL   1
     #define ITIMER_PROF      2

     int
     getitimer(int which, struct itimerval *value);

     int
     setitimer(int which, const struct itimerval *restrict value,
	 struct itimerval *restrict ovalue);

DESCRIPTION
     The system provides each process with three interval timers, defined in
     <sys/time.h>.  The getitimer() call returns the current value for the
     timer specified in which in the structure at value.  The setitimer() call
     sets a timer to the specified value (returning the previous value of the
     timer if ovalue is non-nil).

     A timer value is defined by the itimerval structure:

	   struct itimerval {
		   struct  timeval it_interval;    /* timer interval */
		   struct  timeval it_value;	   /* current value */
	   };

     If it_value is non-zero, it indicates the time to the next timer expira-
     tion.  If it_interval is non-zero, it specifies a value to be used in
     reloading it_value when the timer expires.  Setting it_value to 0 dis-
     ables a timer.  Setting it_interval to 0 causes a timer to be disabled
     after its next expiration (assuming it_value is non-zero).

     Time values smaller than the resolution of the system clock are rounded
     up to this resolution (typically 10 milliseconds).

     The ITIMER_REAL timer decrements in real time.  A SIGALRM signal is
     delivered when this timer expires.

     The ITIMER_VIRTUAL timer decrements in process virtual time.  It runs
     only when the process is executing.  A SIGVTALRM signal is delivered when
     it expires.

     The ITIMER_PROF timer decrements both in process virtual time and when
     the system is running on behalf of the process.  It is designed to be
     used by interpreters in statistically profiling the execution of inter-
     preted programs.  Each time the ITIMER_PROF timer expires, the SIGPROF
     signal is delivered.  Because this signal may interrupt in-progress sys-
     tem calls, programs using this timer must be prepared to restart inter-
     rupted system calls.

NOTES
     Three macros for manipulating time values are defined in <sys/time.h>.
     Timerclear sets a time value to zero, timerisset tests if a time value is
     non-zero, and timercmp compares two time values (beware that >= and <= do
     not work with this macro).

RETURN VALUES
     Upon successful completion, a value of 0 is returned.  Otherwise, a value
     of -1 is returned and the global integer variable errno is set to indi-
     cate the error.

ERRORS
     Getitimer() and setitimer() will fail if:

     [EFAULT]		The value parameter specified a bad address.

     [EINVAL]		The value parameter specified a time that was too
			large to be handled or not in the canonical form.

     [EINVAL]		The which parameter was invalid.

SEE ALSO
     gettimeofday(2), select(2), sigaction(2)

HISTORY
     The getitimer() function call appeared in 4.2BSD.

4.2 Berkeley Distribution      December 11, 1993     4.2 Berkeley Distribution
