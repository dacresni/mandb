REBOOT(2)		    BSD System Calls Manual		     REBOOT(2)

NAME
     reboot -- reboot system or halt processor

SYNOPSIS
     #include <unistd.h>
     #include <sys/reboot.h>

     int
     reboot(int howto);

DESCRIPTION
     Reboot() reboots the system.  Only the super-user may reboot a machine on
     demand.  However, a reboot may be invoked automatically in the event of
     unrecoverable system failures.  Programs other than reboot(8) should not
     call reboot().  Shutdown(8) or a higher-level API will shut the system
     down cleanly.

     Howto is a mask of options; the system call interface allows the follow-
     ing options, defined in the include file <sys/reboot.h>, to be passed to
     the new kernel or the new bootstrap and init programs.

     RB_AUTOBOOT   The default, causing the system to reboot in its usual
		   fashion.

     RB_ASKNAME    Interpreted by the bootstrap program itself, causing it to
		   prompt on the console as to what file should be booted.
		   Normally, the system is booted from the file
		   ``xx(0,0)bsd'', where xx is the default disk name, without
		   prompting for the file name.

     RB_DFLTROOT   Use the compiled in root device.  Normally, the system uses
		   the device from which it was booted as the root device if
		   possible.  (The default behavior is dependent on the abil-
		   ity of the bootstrap program to determine the drive from
		   which it was loaded, which is not possible on all systems.)

     RB_DUMP	   Dump kernel memory before rebooting; see savecore(8) for
		   more information.

     RB_HALT	   the processor is simply halted; no reboot takes place.
		   This option should be used with caution.

     RB_INITNAME   An option allowing the specification of an init program
		   (see init(8)) other than /sbin/init to be run when the sys-
		   tem reboots.  This switch is not currently available.

     RB_KDB	   Load the symbol table and enable a built-in debugger in the
		   system.  This option will have no useful function if the
		   kernel is not configured for debugging.  Several other
		   options have different meaning if combined with this
		   option, although their use may not be possible via the
		   reboot() call.  See kadb(4) for more information.

     RB_NOSYNC	   Normally, the disks are sync'd (see sync(8)) before the
		   processor is halted or rebooted.  This option may be useful
		   if file system changes have been made manually or if the
		   processor is on fire.

     RB_RDONLY	   Initially mount the root file system read-only.  This is
		   currently the default, and this option has been deprecated.

     RB_SINGLE	   Normally, the reboot procedure involves an automatic disk
		   consistency check and then multi-user operations.
		   RB_SINGLE prevents this, booting the system with a single-
		   user shell on the console.  RB_SINGLE is actually inter-
		   preted by the init(8) program in the newly booted system.

		   When no options are given (i.e., RB_AUTOBOOT is used), the
		   system is rebooted from file ``bsd'' in the root file sys-
		   tem of unit 0 of a disk chosen in a processor specific way.
		   An automatic consistency check of the disks is normally
		   performed (see fsck(8)).

RETURN VALUES
     If successful, this call never returns.  Otherwise, a -1 is returned and
     an error is returned in the global variable errno.

ERRORS
     [EPERM]		The caller is not the super-user.

SEE ALSO
     shutdown(8), halt(8), launchd(8), reboot(8)

BUGS
     The HP300 implementation supports neither RB_DFLTROOT nor RB_KDB.

HISTORY
     The reboot() function call appeared in 4.0BSD.

4th Berkeley Distribution	 June 4, 1993	     4th Berkeley Distribution
