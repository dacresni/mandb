AIO_RETURN(2)		    BSD System Calls Manual		 AIO_RETURN(2)

NAME
     aio_return -- retrieve return status of asynchronous I/O operation (REAL-
     TIME)

LIBRARY
     Standard C Library (libc, -lc)

SYNOPSIS
     #include <aio.h>

     ssize_t
     aio_return(struct aiocb *aiocbp);

DESCRIPTION
     The aio_return() system call returns the final status of the asynchronous
     I/O request associated with the structure pointed to by aiocbp.

     The aio_return() system call should only be called once, to obtain the
     final status of an asynchronous I/O operation (once aio_error(2) returns
     something other than EINPROGRESS) and to clean up system resources. How-
     ever, if aio_return() is not called at all, aio(4) will leak resources.

RETURN VALUES
     If the asynchronous I/O request has completed, the status is returned as
     described in read(2), write(2), or fsync(2).  On failure, aio_return()
     returns -1 and sets errno to indicate the error condition.

ERRORS
     The aio_return() system call will fail if:

     [EINVAL]		The aiocbp argument does not reference an outstanding
			asynchronous I/O request.

     [EINPROGRESS]	The asynchronous I/O request is still in progress.

LEGACY SYNOPSIS
     #include <aio.h>

     int
     aio_return(struct aiocb *aiocbp);

     The type of the return value has changed.

SEE ALSO
     aio_cancel(2), aio_error(2), aio_suspend(2), aio_write(2), fsync(2),
     read(2), write(2), aio(4), compat(5)

STANDARDS
     The aio_return() system call is expected to conform to the IEEE Std
     1003.1 (``POSIX.1'') standard.

HISTORY
     The aio_return() system call first appeared in FreeBSD 3.0.

AUTHORS
     This manual page was written by Wes Peters <wes@softweyr.com>.

BSD			      September 26, 2008			   BSD
